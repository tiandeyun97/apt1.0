# Generated by Django 5.1.4 on 2025-02-26 10:51

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "company_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="公司ID",
                    ),
                ),
                ("company_name", models.CharField(max_length=200, verbose_name="公司名称")),
                (
                    "company_code",
                    models.CharField(max_length=50, unique=True, verbose_name="公司编号"),
                ),
                ("address", models.CharField(max_length=500, verbose_name="公司地址")),
                (
                    "contact_person",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="联系人"
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="联系邮箱"
                    ),
                ),
                (
                    "contact_phone",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="联系电话"
                    ),
                ),
                (
                    "create_date",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("normal", "正常"),
                            ("suspended", "暂停"),
                            ("closed", "关闭"),
                        ],
                        default="normal",
                        max_length=20,
                        verbose_name="状态",
                    ),
                ),
            ],
            options={
                "verbose_name": "公司管理",
                "verbose_name_plural": "公司管理",
                "ordering": ["-create_date"],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="users",
                        to="organize.company",
                        verbose_name="所属公司",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户管理",
                "verbose_name_plural": "用户管理",
                "ordering": ["-date_joined"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "department_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="部门ID",
                    ),
                ),
                (
                    "department_code",
                    models.CharField(max_length=50, verbose_name="部门编号"),
                ),
                (
                    "department_name",
                    models.CharField(max_length=100, verbose_name="部门名称"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("normal", "正常"),
                            ("suspended", "暂停"),
                            ("closed", "关闭"),
                        ],
                        default="normal",
                        max_length=20,
                        verbose_name="状态",
                    ),
                ),
                (
                    "create_date",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="organize.company",
                        verbose_name="所属公司",
                    ),
                ),
                (
                    "manager",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="managed_department",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="部门负责人",
                    ),
                ),
                (
                    "members",
                    models.ManyToManyField(
                        blank=True,
                        related_name="department",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="部门成员",
                    ),
                ),
                (
                    "parent_department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="child_departments",
                        to="organize.department",
                        verbose_name="上级部门",
                    ),
                ),
            ],
            options={
                "verbose_name": "部门管理",
                "verbose_name_plural": "部门管理",
                "ordering": ["department_code"],
                "unique_together": {("company", "department_code")},
            },
        ),
    ]
